---
- name: install sshtun packages
  community.general.opkg:
    name: "{{ wrt_sshtun_packages |join(',') }}"
  tags:
    - wrt_sshtun_packages

- name: create sshtun helper script for ssh client
  ansible.builtin.copy:
    src: sshtun-up.sh
    dest: /opt/usr/sbin/sshtun-up.sh
    mode: 0755
    force: true
  notify: restart wrt service sshtun
  tags:
    - wrt_sshtun_ssh
    - wrt_sshtun_scripts

- name: create sshtun service script
  ansible.builtin.copy:
    src: sshtun-service.sh
    dest: /opt/usr/sbin/sshtun-service.sh
    mode: 0755
    force: true
  notify: restart wrt service sshtun
  tags:
    - wrt_sshtun_service
    - wrt_sshtun_scripts

- name: create directory for ssh client config
  ansible.builtin.file:
    path: "{{ ansible_user_dir }}/.ssh"
    state: directory
    mode: 0755
  tags:
    - wrt_sshtun_ssh

- name: create directory for sshtun config files
  ansible.builtin.file:
    path: /opt/etc/sshtun
    state: directory
    mode: 0755
  tags:
    - wrt_sshtun_config

- name: setup sshtun server peers
  ansible.builtin.include_tasks: peer.yml
  args:
    apply:
      become: true
      tags:
        - wrt_sshtun_peers
        - wrt_sshtun_all
  vars:
    name: "{{ peer.name |d('',true) |string }}"
    ssh_alias: "{{ name }}"

    ssh_host: "{{ peer.ssh_host |d('',true) |string }}"
    ssh_port: "{{ peer.ssh_port |d(wrt_sshtun_ssh_port, true) |d(22,true) |int }}"
    ssh_user: "{{ peer.ssh_user |d(wrt_sshtun_ssh_user, true) |d('',true) |string }}"
    ssh_key: "{{ peer.ssh_key |d(wrt_sshtun_ssh_key, true) |d('',true) |string }}"

    ## note: known_host key is broken with proxy
    strict_host_checks: "{{ peer.strict_host_checks |d(proxy == '', true) |bool }}"  # noqa 602
    known_host_key: "{{ peer.host_key |d('',true) }}"
    keyscan_workaround: "{{ peer.keyscan_workaround |d(wrt_sshtun_keyscan_workaround) |bool }}"
    proxy: "{{ peer.proxy |d(wrt_sshtun_proxy, true) |d('',true) |string }}"

    socks_port: "{{ peer.socks_port |d(wrt_sshtun_socks_port, true) |d(0,true) |int }}"
    forward_ports: "{{ peer.forward_ports |d(wrt_sshtun_forward_ports, true) |d([],true) }}"

    gw_ipv4: "{{ peer.gw_ipv4 |d(wrt_sshtun_gw_ipv4, true) |string }}"
    gw_ipv6: "{{ peer.gw_ipv6 |d(wrt_sshtun_gw_ipv6, true) |string }}"
    remote_tun: "{{ peer.remote_tun |d(wrt_sshtun_remote_tun, true) |int }}"
    local_tun: "{{ wrt_sshtun_local_tun }}"
    local_tun_device: "tun{{ local_tun }}"
  when: ssh_alias and ssh_host and ssh_user
  loop: "{{ wrt_sshtun_servers |d([],true) }}"
  loop_control:
    loop_var: peer
    label: "{{ name }}"
  tags:
    - wrt_sshtun_peers
    - wrt_sshtun_config
    - wrt_sshtun_ssh
    - wrt_sshtun_ssh_config
    - wrt_sshtun_ssh_host
    - wrt_sshtun_ssh_key

- name: verify that default sshtun peer has config
  ansible.builtin.file:
    path: /opt/etc/sshtun/{{ wrt_sshtun_default_server }}
    state: file
  tags:
    - wrt_sshtun_peers
    - wrt_sshtun_config
    - wrt_sshtun_service

- name: update symlink for default sshtun peer
  ansible.builtin.file:
    state: link
    dest: /opt/etc/sshtun/config
    src: "{{ wrt_sshtun_default_server }}"
  notify: restart wrt service sshtun
  tags:
    - wrt_sshtun_peers
    - wrt_sshtun_config
    - wrt_sshtun_service

- name: create sshtun startup script
  ansible.builtin.copy:
    src: sshtun-initd.sh
    dest: "/opt/etc/init.d/{{ wrt_sshtun_initd }}"
    mode: 0755
    force: true
  notify: restart wrt service sshtun
  tags:
    - wrt_sshtun_service
    - wrt_sshtun_scripts

- name: enable wrt service sshtun
  ivansible.entware.openwrt_init2:
    name: "{{ wrt_sshtun_initd }}"
    state: started
  tags:
    - skip_ansible_lint
    - wrt_sshtun_service
...
